[Critic]
Critic of the first version to create basis for second version.

[User Interface/Experience]
Cluttered UI
    - How do you select the fields needed easily?
    - How should you display the schedule?
    - Splitting time, 1/3 of a minute?
    - How should you display it? With missing minutes or accurate to the second 
      or the nearest number with accuracy (e.g. 0.333.. h becomes 20min)?
    - How do you store the values in Java? What libraries?

Creating the schedule (UI)
    - Is it a worthwhile tradeoff to have less flexibility of task durations?
      A more granular duration system? 10 min, 20 min, 30 min, 1hr blocks? 
    - What interval of repetition (e.g. every Monday or annually) should be 
      provided?
    - The current naming scheme is not easily understood. What other alternatives 
      or possibly analogies can we use to convey the meaning of different parts 
      of the schedule? (Tasks, interrupts)

Misleading UI
    - When setting the deadline, the user has to press the back button on the
      top left which actually saves the deadline. The android back button does
      not save and there is no "done" or "save" button for the user to press
      to save their deadline.
    - After creating a task, the schedule does NOT refresh.(it should refresh)

User experience
    - A slideshow can be added to introduce the user to the core concepts of 
      the application (ie whats a "task" or "interrupt"
    - A setup menu can be added for the user to add basic "interrupts" such as 
      sleep or meals.
    - The user should only be presented with the schedule for the day.

[Functionality]
Updating schedule
    - How do you easily remove tasks?
    - How do you know what is the time to start scheduling?
    - It can't be "now" because the scheduler may change the schedule during 
      the one minute of reading the schedule. Hence, the schedule needs to 
      be frozen.
    - Perhaps we can implement a "start time"?
    - The updates to the schedule does not seem to be triggered properly


Missing Functionality
    - Link tasks to subjects/type or projects
    - The ability to custormise the schedule to my liking on demand.
    - The ability to schedule or take breaks on demand, or should be default?
    - The ability to request for more time, or finish faster than expected.
    - The ability to record the users activity for the day.
    - How does a task get marked as complete? The user should mark themselves.
    - The ability to pioritise tasks. (ie work > pla
    - The ability to assign a time affinity, 
    (ie I want to finish this in the dawn, morning, afternoon, dusk, nightime)

[Algorithm/Performance]
The Scheduler(s)
    - Is there a need for the different schedulers? Why?
    - What schedulers should we provide? 
    - Why would they be suitable for our target audience?

What is the optimal algorithm for conducting scheduling?
    - Random Task First
    - Earliest Deadline first - most tasks done before deadline
    - Smallest Task First (least duration) 
    - Most Important Task First (most weight)
    - Round Robin - Cycle around fixed time?
    - Dynamic Priority - weight/duration
    - Dynamic Priority - adjusted ratio of deadline, weight, duration 
      and timing afinity.
    - Brute Force?
    - Dynamic Programming? 
[LATER] How do we optmise the schedule through caching results?
